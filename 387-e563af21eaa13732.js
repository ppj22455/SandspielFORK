"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[387],{397:function(e,a,l){l.d(a,{Sb:function(){return w},bB:function(){return T},ho:function(){return k},rk:function(){return f}});var t=l(7621),n=l.n(t),o=l(8256),i=l(5466),d=l.n(i),c=l(8824),m=l(3945),r=l.n(m),u=l(8182),s=l.n(u),v=new Set(["Any","Void","Number","Vector","Boolean","Element","Group","String"]),f=function(e,a){var l=e.getInput(a).connection.targetConnection;if(null===l)return"Void";var t=function(e){if(void 0===e)return"Any";if(0===e.length)return"Void";if(1===e.length){if(!v.has(e[0]))throw new TypeError("Could not resolve unapproved type: ".concat(e[0]));return e[0]}if(2===e.length)throw new Error("Block was more than one type! This shouldn't be allowed! Please tell @todepond that you saw this error :)");throw new TypeError("Could not resolve block check into a Sand-Blocks type: ".concat(e))}(l.check_);return t};o.JavaScript.sand_behavior_base=function(e){return"const swaps = [];"},o.JavaScript.number_literal=function(e){var a=e.getFieldValue("VALUE");return[parseInt(a),o.JavaScript.ORDER_ATOMIC]},o.JavaScript.number_literal_positive=o.JavaScript.number_literal,o.JavaScript.element_literal=function(e){var a=e.getFieldValue("VALUE");return[parseInt(a),o.JavaScript.ORDER_ATOMIC]},o.JavaScript.group=function(e){for(var a="[",l=0;null!==e.getInput("ITEM".concat(l));){var t=f(e,"ITEM".concat(l)),n=o.JavaScript.valueToCode(e,"ITEM".concat(l),o.JavaScript.ORDER_ATOMIC);a+="[".concat(n,', "').concat(t,'"],'),l++}return[a+="]",o.JavaScript.ORDER_MEMBER]},o.JavaScript.vector_literal=function(e){var a=o.JavaScript.valueToCode(e,"X",o.JavaScript.ORDER_ATOMIC),l=o.JavaScript.valueToCode(e,"Y",o.JavaScript.ORDER_ATOMIC);return["[".concat(a,", ").concat(l,"]"),o.JavaScript.ORDER_MEMBER]},o.JavaScript.me=function(e){return["[0, 0]",o.JavaScript.ORDER_FUNCTION_CALL]};var E={HERE:"[0, 0]",DOWN:"[0, 1]",LEFT:"[-1, 0]",RIGHT:"[1, 0]",UP:"[0, -1]",NW:"[-1, -1]",NE:"[1, -1]",SW:"[-1, 1]",SE:"[1, 1]",RAND:"this.randomOffset()",KB:"this.getKeyBoardVector()"},p=new Set(Object.keys(E));function h(e){return"RA"==e?1:"RB"==e?2:"RC"==e?3:void 0}o.JavaScript.vector_constant=function(e){var a=e.getFieldValue("VALUE");if(!p.has(a))throw new TypeError("Unapproved direction name: '".concat(a,"'"));return["".concat(E[a]),o.JavaScript.ORDER_MEMBER]},o.JavaScript.change_into=function(e){var a=o.JavaScript.valueToCode(e,"CELL",o.JavaScript.ORDER_MEMBER),l=o.JavaScript.valueToCode(e,"ELEMENT",o.JavaScript.ORDER_ATOMIC);return"this.setSandRelative(".concat(a,", ").concat(l,");\n")},o.JavaScript.cursor_distance=function(e){return["this.getCursorDistance()",o.JavaScript.ORDER_ATOMIC]},o.JavaScript.keyboard_vector=function(e){return["this.getKeyBoardVector()",o.JavaScript.ORDER_ATOMIC]},o.JavaScript.set_r_cell=function(e){var a=o.JavaScript.valueToCode(e,"CELL",o.JavaScript.ORDER_MEMBER),l=o.JavaScript.valueToCode(e,"VALUE",o.JavaScript.ORDER_ATOMIC),t=e.getFieldValue("DATA"),n="this.clamp(".concat(l,",0, 100) ");return"ELEMENT"===t?"this.setSandRelative(".concat(a,", ").concat(l,", 0, 0, 0)"):"RA"===t?"this.setSandRelative(".concat(a,", undefined, ").concat(n,");\n"):"RB"===t?"this.setSandRelative(".concat(a,", undefined, undefined, ").concat(n,");\n"):"RC"===t?"this.setSandRelative(".concat(a,", undefined, undefined, undefined, ").concat(n,");\n"):void 0},o.JavaScript.set_r_cell_short=function(e){var a="[0, 0]",l=o.JavaScript.valueToCode(e,"VALUE",o.JavaScript.ORDER_ATOMIC),t=e.getFieldValue("DATA"),n="this.clamp(".concat(l,", 0, 100)");return"RA"===t?"this.setSandRelative(".concat(a,", undefined, ").concat(n,");\n"):"RB"===t?"this.setSandRelative(".concat(a,", undefined, undefined, ").concat(n,");\n"):"RC"===t?"this.setSandRelative(".concat(a,", undefined, undefined, undefined, ").concat(n,");\n"):void 0},o.JavaScript.modify_r=function(e){var a="[0, 0]",l=o.JavaScript.valueToCode(e,"VALUE",o.JavaScript.ORDER_ATOMIC),t=e.getFieldValue("DATA"),n=h(t),i="this.clamp(this.getSandRelative(".concat(a,", ").concat(n,") +  ").concat(l,", 0, 100)");return"RA"===t?"this.setSandRelative(".concat(a,", undefined, ").concat(i,");\n"):"RB"===t?"this.setSandRelative(".concat(a,", undefined, undefined, ").concat(i,");\n"):"RC"===t?"this.setSandRelative(".concat(a,", undefined, undefined, undefined, ").concat(i,");\n"):void 0},o.JavaScript.get_r_cell=function(e){var a=o.JavaScript.valueToCode(e,"CELL",o.JavaScript.ORDER_MEMBER),l=e.getFieldValue("DATA");return"ELEMENT"===l?["this.getSandRelative(".concat(a,", 0)"),o.JavaScript.ORDER_ATOMIC]:"RA"===l?["this.getSandRelative(".concat(a,", 1)"),o.JavaScript.ORDER_ATOMIC]:"RB"===l?["this.getSandRelative(".concat(a,", 2)"),o.JavaScript.ORDER_ATOMIC]:"RC"===l?["this.getSandRelative(".concat(a,", 3)"),o.JavaScript.ORDER_ATOMIC]:void 0},o.JavaScript.get_r_cell_short=function(e){var a="[0, 0]",l=e.getFieldValue("DATA");return"RA"===l?["this.getSandRelative(".concat(a,", 1) "),o.JavaScript.ORDER_ATOMIC]:"RB"===l?["this.getSandRelative(".concat(a,", 2) "),o.JavaScript.ORDER_ATOMIC]:"RC"===l?["this.getSandRelative(".concat(a,", 3)"),o.JavaScript.ORDER_ATOMIC]:void 0},o.JavaScript.element_cell=function(e){var a=o.JavaScript.valueToCode(e,"CELL",o.JavaScript.ORDER_MEMBER);return["this.getSandRelative(".concat(a,")"),o.JavaScript.ORDER_ATOMIC]},o.JavaScript.swap=function(e){var a=o.JavaScript.valueToCode(e,"A",o.JavaScript.ORDER_MEMBER),l=o.JavaScript.valueToCode(e,"B",o.JavaScript.ORDER_MEMBER);return"this.swapSandRelative(".concat(a,", ").concat(l,", swaps);\n")},o.JavaScript.move=function(e){var a=o.JavaScript.valueToCode(e,"DIRECTION",o.JavaScript.ORDER_MEMBER);return"this.swapSandRelative([0, 0], ".concat(a,", swaps);\nthis.moveOrigin(").concat(a,");\n")},o.JavaScript.clone=function(e){var a=o.JavaScript.valueToCode(e,"DIRECTION",o.JavaScript.ORDER_MEMBER);return"this.cloneSandRelative([0, 0], ".concat(a,");\n")},o.JavaScript.random_number=function(e){var a=o.JavaScript.valueToCode(e,"MIN",o.JavaScript.ORDER_ATOMIC),l=o.JavaScript.valueToCode(e,"MAX",o.JavaScript.ORDER_ATOMIC),t="(".concat(l," - ").concat(a," + 1)");return["(".concat(a," + Math.floor(Math.random() * ").concat(t,"))"),o.JavaScript.ORDER_FUNCTION_CALL]},o.JavaScript.one_in=function(e){var a=o.JavaScript.valueToCode(e,"NUMBER",o.JavaScript.ORDER_ATOMIC);return["(Math.random() < 1/".concat(a,")"),o.JavaScript.ORDER_FUNCTION_CALL]},o.JavaScript.bool_literal=function(e){return["TRUE"===e.getFieldValue("VALUE")?"true":"false",o.JavaScript.ORDER_MEMBER]},o.JavaScript.true_literal=function(e){return["true",o.JavaScript.ORDER_MEMBER]},o.JavaScript.statement_value=function(e){var a=o.JavaScript.valueToCode(e,"VALUE",o.JavaScript.ORDER_ATOMIC);return"this.returnValue = ".concat(a,";\n")},o.JavaScript.statement_value_shadow=function(e){return["undefined",o.JavaScript.ORDER_ATOMIC]},o.JavaScript.not=function(e){var a=o.JavaScript.valueToCode(e,"BOOL",o.JavaScript.ORDER_ATOMIC);return["!".concat(a),o.JavaScript.ORDER_FUNCTION_CALL]},o.JavaScript.if=function(e){var a=[],l=o.JavaScript.valueToCode(e,"CONDITION",o.JavaScript.ORDER_ATOMIC);""===l&&(l="false");var t=o.JavaScript.statementToCode(e,"THEN");a.push("if (".concat(l,") {\n").concat(t,"\n}"));var n=!0,i=!1,d=void 0;try{for(var c,m=e.elseIds[Symbol.iterator]();!(n=(c=m.next()).done);n=!0){var r=c.value,u=o.JavaScript.valueToCode(e,"ELSE_CONDITION".concat(r),o.JavaScript.ORDER_ATOMIC),s=o.JavaScript.statementToCode(e,"THEN".concat(r));a.push("else if (".concat(u,") {\n").concat(s,"\n}"))}}catch(e){i=!0,d=e}finally{try{n||null==m.return||m.return()}finally{if(i)throw d}}return a.join("\n")},o.JavaScript.repeat=function(e){var a=o.JavaScript.valueToCode(e,"NUMBER",o.JavaScript.ORDER_ATOMIC),l=o.JavaScript.statementToCode(e,"STATEMENT");return"for (let i = 0; i < Math.round(".concat(a,"); i++) {\n").concat(l,"\n}")},o.JavaScript.every_n_frames=function(e){var a=o.JavaScript.valueToCode(e,"NUMBER",o.JavaScript.ORDER_ATOMIC),l=o.JavaScript.statementToCode(e,"STATEMENT");return"if (this.t % ".concat(a," === 0) {\n").concat(l,"\n}")},o.JavaScript.rotated_by=function(e){var a=o.JavaScript.valueToCode(e,"NUMBER",o.JavaScript.ORDER_ATOMIC),l=o.JavaScript.statementToCode(e,"BODY");return"{const oldTransformation = this.getTransformation();\n this.setRotation(Math.round(".concat(a,"));\n").concat(l,"this.setTransformation(...oldTransformation);}\n")};var _=new Set(["ROTATION","REFLECTION","HORIZONTAL_REFLECTION","VERTICAL_REFLECTION"]);o.JavaScript.in_a_random=function(e){var a=e.getFieldValue("NAME");if(!_.has(a))throw new TypeError("Unapproved transformation name: '".concat(a,"'"));var l=o.JavaScript.statementToCode(e,"NAME");return'{const oldTransformation = this.getTransformation();\n this.setRandomTransformation("'.concat(a,'");\n').concat(l,"this.setTransformation(...oldTransformation);}\n")},o.JavaScript.for_all=function(e){var a=e.getFieldValue("NAME");if(!_.has(a))throw new TypeError("Unapproved transformation name: '".concat(a,"'"));var l=o.JavaScript.statementToCode(e,"NAME"),t=[];return t.push("{"),t.push("  const oldTransformation = this.getTransformation();"),t.push('  this.loopThroughTransformation("'.concat(a,'", () => {\n    ').concat(l,"\n    });")),t.push("  this.setTransformation(...oldTransformation);"),t.push("}"),t.join("\n")};var b={IS:"eq",BIGGER:"greaterThan",SMALLER:"lessThan"};o.JavaScript.comparison=function(e){var a=f(e,"A"),l=f(e,"B"),t=o.JavaScript.valueToCode(e,"A",o.JavaScript.ORDER_ATOMIC),n=o.JavaScript.valueToCode(e,"B",o.JavaScript.ORDER_ATOMIC);""===t&&(t="undefined"),""===n&&(n="undefined");var i=e.getFieldValue("COMPARISON");return["this.".concat(b[i],"(").concat(t,", ").concat(n,', "').concat(a,'", "').concat(l,'")'),o.JavaScript.ORDER_FUNCTION_CALL]};var A={ADD:"add",SUBTRACT:"subtract",MULTIPLY:"multiply",DIVIDE:"divide",MOD:"mod",DIFFERENCE:"difference"};o.JavaScript.operation=function(e){var a=f(e,"A"),l=f(e,"B"),t=o.JavaScript.valueToCode(e,"A",o.JavaScript.ORDER_ATOMIC),n=o.JavaScript.valueToCode(e,"B",o.JavaScript.ORDER_ATOMIC);""===t&&(t="undefined"),""===n&&(n="undefined");var i=e.getFieldValue("OPERATION");return["this.".concat(A[i],"(").concat(t,", ").concat(n,', "').concat(a,'", "').concat(l,'")'),o.JavaScript.ORDER_FUNCTION_CALL]};var L={AND:"&&",OR:"||"};o.JavaScript.boolean_operation=function(e){var a=o.JavaScript.valueToCode(e,"A",o.JavaScript.ORDER_ATOMIC),l=o.JavaScript.valueToCode(e,"B",o.JavaScript.ORDER_ATOMIC);""===a&&(a="false"),""===l&&(l="false");var t=e.getFieldValue("OPERATION"),n=L[t];return["".concat(a," ").concat(n," ").concat(l),o.JavaScript.ORDER_LOGICAL_AND]},o.JavaScript.is_block=function(e){var a=o.JavaScript.valueToCode(e,"CELL",o.JavaScript.ORDER_MEMBER),l=o.JavaScript.valueToCode(e,"ELEMENT",o.JavaScript.ORDER_ATOMIC),t=f(e,"ELEMENT");return["this.isBlock(".concat(a,", ").concat(l,', "').concat(t,'")'),o.JavaScript.ORDER_FUNCTION_CALL]},o.JavaScript.is_touching=function(e){var a=o.JavaScript.valueToCode(e,"ELEMENT",o.JavaScript.ORDER_ATOMIC),l=f(e,"ELEMENT");return["this.isTouching([0, 0], ".concat(a,', "').concat(l,'")'),o.JavaScript.ORDER_FUNCTION_CALL]},o.JavaScript.number_touching=function(e){var a=o.JavaScript.valueToCode(e,"ELEMENT",o.JavaScript.ORDER_ATOMIC),l=f(e,"ELEMENT");return["this.getNumberTouching([0, 0], ".concat(a,', "').concat(l,'")'),o.JavaScript.ORDER_FUNCTION_CALL]};var y=new Set(["SPACE","ArrowRight","ArrowLeft","ArrowUp","ArrowDown"]);function w(e){var a='<field name="COLOR'.concat(arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",'">'),l=a.length,t=e.indexOf(a),o=e.slice(t+l,t+l+7),i=n()(o).toHsl();return[i.h/360,i.s,i.l]}function k(e){var a=/<field name="ELEMENT_NAME">(.*?)<\/field>/.exec(e);return a?a[1]:"?"}function T(e,a){for(var l=void 0,t=0;t<a.topBlocks_.length;t++){var n=a.topBlocks_[t];if("sand_behavior_base"==n.type){l=n;break}}try{var i=d().blockToCode(l);i=r().format(i,{parser:"babel",plugins:[s()]});var m=o.Xml.workspaceToDom(a),u=o.Xml.domToPrettyText(m),v=Function(i);c.ZP.getState().setXml(u,e),c.n2.updaters[e]=v.bind(c.n2)}catch(e){return void console.error(e)}}o.JavaScript.key_pressed=function(e){var a=e.getFieldValue("KEY");if(!y.has(a))throw new TypeError("Unapproved key name: '".concat(a,"'"));return"SPACE"===a&&(a=" "),['this.keys["'.concat(a,'"]'),o.JavaScript.ORDER_MEMBER]},o.JavaScript.get_r_cell_flexible=function(e){var a=o.JavaScript.valueToCode(e,"CELL",o.JavaScript.ORDER_MEMBER);""===a&&(a="[0, 0]");var l=e.getFieldValue("DATA");return"ELEMENT"===l?["this.getSandRelative(".concat(a,", 0)"),o.JavaScript.ORDER_ATOMIC]:"RA"===l?["this.getSandRelative(".concat(a,", 1) "),o.JavaScript.ORDER_ATOMIC]:"RB"===l?["this.getSandRelative(".concat(a,", 2) "),o.JavaScript.ORDER_ATOMIC]:"RC"===l?["this.getSandRelative(".concat(a,", 3) "),o.JavaScript.ORDER_ATOMIC]:void 0},o.JavaScript.set_r_cell_flexible=function(e){var a=o.JavaScript.valueToCode(e,"CELL",o.JavaScript.ORDER_MEMBER);""===a&&(a="[0, 0]");var l=o.JavaScript.valueToCode(e,"VALUE",o.JavaScript.ORDER_ATOMIC),t=e.getFieldValue("DATA"),n="this.clamp(".concat(l,", 0, 100)");return"ELEMENT"===t?"this.setSandRelative(".concat(a,", ").concat(l,", undefined, undefined, undefined, false);\n"):"RA"===t?"this.setSandRelative(".concat(a,", undefined, ").concat(n,");\n"):"RB"===t?"this.setSandRelative(".concat(a,", undefined, undefined, ").concat(n,");\n"):"RC"===t?"this.setSandRelative(".concat(a,", undefined, undefined, undefined, ").concat(n,");\n"):void 0},o.JavaScript.set_r_cell_flexible_hue_fix=function(e){var a=o.JavaScript.valueToCode(e,"CELL",o.JavaScript.ORDER_MEMBER);""===a&&(a="[0, 0]");var l=o.JavaScript.valueToCode(e,"VALUE",o.JavaScript.ORDER_ATOMIC),t=e.getFieldValue("DATA"),n="this.".concat("RB"===t?"wrap":"clamp","(").concat(l,", 0, 100)");return"ELEMENT"===t?"this.setSandRelative(".concat(a,", ").concat(l,", undefined, undefined, undefined, false);\n"):"RA"===t?"this.setSandRelative(".concat(a,", undefined, ").concat(n,");\n"):"RB"===t?"this.setSandRelative(".concat(a,", undefined, undefined, ").concat(n,");\n"):"RC"===t?"this.setSandRelative(".concat(a,", undefined, undefined, undefined, ").concat(n,");\n"):void 0},o.JavaScript.modify_r_cell_flexible=function(e){var a=o.JavaScript.valueToCode(e,"CELL",o.JavaScript.ORDER_MEMBER);""===a&&(a="[0, 0]");var l=o.JavaScript.valueToCode(e,"VALUE",o.JavaScript.ORDER_ATOMIC),t=e.getFieldValue("DATA"),n=h(t),i="this.clamp(this.getSandRelative(".concat(a,", ").concat(n,")  + ").concat(l,", 0, 100) ");return"ELEMENT"===t?"this.setSandRelative(".concat(a,", this.getSandRelative(").concat(a,", ").concat(n,")  + ").concat(l,");\n"):"RA"===t?"this.setSandRelative(".concat(a,", undefined, ").concat(i,");\n"):"RB"===t?"this.setSandRelative(".concat(a,", undefined, undefined, ").concat(i,");\n"):"RC"===t?"this.setSandRelative(".concat(a,", undefined, undefined, undefined, ").concat(i,");\n"):void 0},o.JavaScript.modify_r_cell_flexible_hue_fix=function(e){var a=o.JavaScript.valueToCode(e,"CELL",o.JavaScript.ORDER_MEMBER);""===a&&(a="[0, 0]");var l=o.JavaScript.valueToCode(e,"VALUE",o.JavaScript.ORDER_ATOMIC),t=e.getFieldValue("DATA"),n=h(t),i="this.".concat("RB"===t?"wrap":"clamp","(this.getSandRelative(").concat(a,", ").concat(n,") + ").concat(l,", 0, 100) ");return"ELEMENT"===t?"this.setSandRelative(".concat(a,", this.getSandRelative(").concat(a,", ").concat(n,")  + ").concat(l,");\n"):"RA"===t?"this.setSandRelative(".concat(a,", undefined, ").concat(i,");\n"):"RB"===t?"this.setSandRelative(".concat(a,", undefined, undefined, ").concat(i,");\n"):"RC"===t?"this.setSandRelative(".concat(a,", undefined, undefined, undefined, ").concat(i,");\n"):void 0},o.JavaScript.comment=function(e){return""},o.JavaScript.after=function(e){var a=o.JavaScript.statementToCode(e,"STATEMENT");return"this.callAfterFrame(() => {\n".concat(a,"\n});")}},4093:function(e,a,l){l.d(a,{I:function(){return o}});var t=l(7621),n=l.n(t);function o(e){var a=n().random();return'<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="40" y="100"><field name="ELEMENT_NAME">'.concat("ABCDEABCDEFGHIJKLMNOPQRSTUVWXYZ"[e],'?</field><field name="COLOR">').concat(a.lighten(15).toHex(),'</field><field name="COLOR2">').concat(a.darken(15).toHex(),'</field>\n<next><block type="if" ><mutation elseIds=""></mutation><value name="CONDITION"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="1"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value></block></value><statement name="THEN"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value></block></statement></block></next></block></xml>')}a.Z=['<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Air</field><field name="COLOR">#ffffff</field><field name="COLOR2">#fffafa</field></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Wall</field><field name="COLOR">#171c19</field><field name="COLOR2">#4a4c5e</field></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Water</field><field name="COLOR">#3557f0</field><field name="COLOR2">#0fafff</field><next><block type="in_a_random" ><field name="NAME">HORIZONTAL_REFLECTION</field><statement name="NAME"><block type="if" ><mutation elseIds="0"></mutation><value name="CONDITION"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><statement name="THEN"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">RIGHT</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><statement name="THEN0"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">RIGHT</field></shadow></value></block></statement></block></statement></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Sand</field><field name="COLOR">#e0ca9e</field><field name="COLOR2">#bfb075</field><next><block type="in_a_random" ><field name="NAME">HORIZONTAL_REFLECTION</field><statement name="NAME"><block type="if" ><mutation elseIds="0"></mutation><value name="CONDITION"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="2"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value><value name="ITEM1"><shadow type="element_literal" ><field name="VALUE">2</field></shadow></value></block></value></block></value><statement name="THEN"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">SE</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><statement name="THEN0"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">SE</field></shadow></value></block></statement></block></statement></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Cloner</field><field name="COLOR">#8f62f0</field><field name="COLOR2">#633c78</field><next><block type="in_a_random" ><field name="NAME">ROTATION</field><statement name="NAME"><block type="if" ><mutation elseIds="0"></mutation><value name="CONDITION"><block type="comparison" ><field name="COMPARISON">IS</field><value name="A"><block type="get_r_cell_short" ><field name="DATA">RB</field></block></value><value name="B"><block type="group" ><mutation itemCount="1"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value></block></value><statement name="THEN"><block type="if" ><mutation elseIds="0"></mutation><value name="CONDITION"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">RIGHT</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">4</field></shadow></value></block></value><statement name="THEN"><block type="set_r_cell_short" ><field name="DATA">RB</field><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="get_r_cell" ><field name="DATA">RB</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">RIGHT</field></shadow></value></block></value></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow></value><statement name="THEN0"><block type="set_r_cell_short" ><field name="DATA">RB</field><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="element_cell" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">RIGHT</field></shadow></value></block></value></block></statement></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">RIGHT</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><statement name="THEN0"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">RIGHT</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="get_r_cell" ><field name="DATA">RB</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">HERE</field></shadow></value></block></value></block></statement></block></statement></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Plant</field><field name="COLOR">#00781a</field><field name="COLOR2">#7fdab4</field><next><block type="if" ><mutation elseIds="0,1"></mutation><value name="CONDITION"><block type="is_touching" ><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">2</field></shadow></value></block></value><statement name="THEN"><block type="in_a_random" ><field name="NAME">ROTATION</field><statement name="NAME"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">RIGHT</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">5</field></shadow></value><next><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></next></block></statement></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="is_touching" ><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="2"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">7</field></shadow></value><value name="ITEM1"><shadow type="element_literal" ><field name="VALUE">12</field></shadow></value></block></value></block></value><statement name="THEN0"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">HERE</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">7</field></shadow></value></block></statement><value name="ELSE_CONDITION1"><shadow type="true_literal" ></shadow><block type="comparison" ><field name="COMPARISON">BIGGER</field><value name="A"><block type="get_r_cell_short" ><field name="DATA">RA</field></block></value><value name="B"><block type="number_literal" ><field name="VALUE">33</field></block></value></block></value><statement name="THEN1"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">5</field></shadow></value><next><block type="set_r_cell_short" ><field name="DATA">RA</field><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="operation" ><mutation implicitType="Number"></mutation><field name="OPERATION">SUBTRACT</field><value name="A"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="get_r_cell" ><field name="DATA">RA</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">UP</field></shadow></value></block></value><value name="B"><shadow type="number_literal" ><field name="VALUE">10</field></shadow><block type="random_number" ><value name="MIN"><shadow type="number_literal" ><field name="VALUE">1</field></shadow></value><value name="MAX"><shadow type="number_literal" ><field name="VALUE">2</field></shadow></value></block></value></block></value></block></next></block></statement></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Stone</field><field name="COLOR">#93a8a8</field><field name="COLOR2">#c2cfc8</field><next><block type="if" ><mutation elseIds=""></mutation><value name="CONDITION"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="3"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value><value name="ITEM1"><shadow type="element_literal" ><field name="VALUE">2</field></shadow></value><value name="ITEM2"><shadow type="element_literal" ><field name="VALUE">12</field></shadow></value></block></value></block></value><statement name="THEN"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value></block></statement></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Fire</field><field name="COLOR">#f05446</field><field name="COLOR2">#dacf00</field><next><block type="modify_r" ><field name="DATA">RA</field><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="random_number" ><value name="MIN"><shadow type="number_literal" ><field name="VALUE">-7</field></shadow></value><value name="MAX"><shadow type="number_literal" ><field name="VALUE">0</field></shadow></value></block></value><next><block type="if" ><mutation elseIds="0,1"></mutation><value name="CONDITION"><block type="comparison" ><field name="COMPARISON">SMALLER</field><value name="A"><block type="get_r_cell_short" ><field name="DATA">RA</field></block></value><value name="B"><block type="number_literal" ><field name="VALUE">1</field></block></value></block></value><statement name="THEN"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">HERE</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="one_in" ><value name="NUMBER"><shadow type="number_literal" ><field name="VALUE">2</field></shadow></value></block></value><statement name="THEN0"><block type="in_a_random" ><field name="NAME">ROTATION</field><statement name="NAME"><block type="if" ><mutation elseIds="0"></mutation><value name="CONDITION"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><statement name="THEN"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="5"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">9</field></shadow></value><value name="ITEM1"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value><value name="ITEM2"><shadow type="element_literal" ><field name="VALUE">10</field></shadow></value><value name="ITEM3"><shadow type="element_literal" ><field name="VALUE">5</field></shadow></value><value name="ITEM4"><shadow type="element_literal" ><field name="VALUE">11</field></shadow></value></block></value></block></value><statement name="THEN0"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">7</field></shadow></value><next><block type="set_r_cell" ><field name="DATA">RA</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">HERE</field></shadow></value><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">50</field></shadow></value></block></next></block></statement></block></statement></block></statement><value name="ELSE_CONDITION1"><shadow type="true_literal" ></shadow><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">UP</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><statement name="THEN1"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">UP</field></shadow></value></block></statement></block></next></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Ice</field><field name="COLOR">#0faaf0</field><field name="COLOR2">#60ebd1</field><next><block type="in_a_random" ><field name="NAME">ROTATION</field><statement name="NAME"><block type="if" ><mutation elseIds="0"></mutation><value name="CONDITION"><block type="boolean_operation" ><field name="OPERATION">AND</field><value name="A"><block type="one_in" ><value name="NUMBER"><shadow type="number_literal" ><field name="VALUE">10</field></shadow></value></block></value><value name="B"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">2</field></shadow></value></block></value></block></value><statement name="THEN"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">8</field></shadow></value><next><block type="set_r_cell_flexible" ><mutation expanded="true"></mutation><field name="DATA">RA</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="operation" ><mutation implicitType="Number"></mutation><field name="OPERATION">ADD</field><value name="A"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="get_r_cell_flexible" ><mutation expanded="false"></mutation><field name="DATA">RA</field></block></value><value name="B"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="random_number" ><value name="MIN"><shadow type="number_literal" ><field name="VALUE">-2</field></shadow></value><value name="MAX"><shadow type="number_literal" ><field name="VALUE">2</field></shadow></value></block></value></block></value></block></next></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="is_touching" ><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="2"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">7</field></shadow></value><value name="ITEM1"><shadow type="element_literal" ><field name="VALUE">12</field></shadow></value></block></value></block></value><statement name="THEN0"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">HERE</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">2</field></shadow></value></block></statement></block></statement></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Gas</field><field name="COLOR">#f0a8e3</field><field name="COLOR2">#c1b5da</field><next><block type="in_a_random" ><field name="NAME">ROTATION</field><statement name="NAME"><block type="if" ><mutation elseIds=""></mutation><value name="CONDITION"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><statement name="THEN"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value></block></statement></block></statement></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Wood</field><field name="COLOR">#784710</field><field name="COLOR2">#bf7e4c</field><next><block type="if" ><mutation elseIds=""></mutation><value name="CONDITION"><block type="comparison" ><field name="COMPARISON">BIGGER</field><value name="A"><block type="get_r_cell_short" ><field name="DATA">RA</field></block></value><value name="B"><block type="number_literal" ><field name="VALUE">11</field></block></value></block></value><statement name="THEN"><block type="in_a_random" ><field name="NAME">ROTATION</field><statement name="NAME"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">10</field></shadow></value><next><block type="set_r_cell" ><field name="DATA">RA</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="operation" ><mutation implicitType="Number"></mutation><field name="OPERATION">SUBTRACT</field><value name="A"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="get_r_cell_short" ><field name="DATA">RA</field></block></value><value name="B"><shadow type="number_literal" ><field name="VALUE">21</field></shadow></value></block></value></block></next></block></statement></block></statement></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Seed</field><field name="COLOR">#2f8700</field><field name="COLOR2">#aaff4f</field><next><block type="if" ><mutation elseIds="0,1,2"></mutation><value name="CONDITION"><block type="comparison" ><field name="COMPARISON">BIGGER</field><value name="A"><block type="get_r_cell_short" ><field name="DATA">RC</field></block></value><value name="B"><block type="number_literal" ><field name="VALUE">50</field></block></value></block></value><statement name="THEN"><block type="if" ><mutation elseIds="0"></mutation><value name="CONDITION"><block type="comparison" ><field name="COMPARISON">SMALLER</field><value name="A"><block type="get_r_cell_short" ><field name="DATA">RC</field></block></value><value name="B"><block type="number_literal" ><field name="VALUE">60</field></block></value></block></value><statement name="THEN"><block type="set_r_cell_short" ><field name="DATA">RB</field><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="random_number" ><value name="MIN"><shadow type="number_literal" ><field name="VALUE">60</field></shadow></value><value name="MAX"><shadow type="number_literal" ><field name="VALUE">99</field></shadow></value></block></value><next><block type="set_r_cell_short" ><field name="DATA">RC</field><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">62</field></shadow></value><next><block type="set_r_cell_short" ><field name="DATA">RA</field><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">88</field></shadow></value></block></next></block></next></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="comparison" ><field name="COMPARISON">SMALLER</field><value name="A"><block type="get_r_cell_short" ><field name="DATA">RC</field></block></value><value name="B"><block type="number_literal" ><field name="VALUE">70</field></block></value></block></value><statement name="THEN0"><block type="in_a_random" ><field name="NAME">ROTATION</field><statement name="NAME"><block type="controls_if" ><value name="IF0"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><statement name="DO0"><block type="clone" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><next><block type="set_r_cell" ><field name="DATA">RC</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="operation" ><mutation implicitType="Number"></mutation><field name="OPERATION">ADD</field><value name="A"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="get_r_cell_short" ><field name="DATA">RC</field></block></value><value name="B"><shadow type="number_literal" ><field name="VALUE">2</field></shadow><block type="random_number" ><value name="MIN"><shadow type="number_literal" ><field name="VALUE">1</field></shadow></value><value name="MAX"><shadow type="number_literal" ><field name="VALUE">5</field></shadow></value></block></value></block></value><next><block type="set_r_cell" ><field name="DATA">RA</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">77</field></shadow></value></block></next></block></next></block></statement></block></statement></block></statement></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="comparison" ><field name="COMPARISON">BIGGER</field><value name="A"><block type="get_r_cell_short" ><field name="DATA">RC</field></block></value><value name="B"><block type="number_literal" ><field name="VALUE">0</field></block></value></block></value><statement name="THEN0"><block type="in_a_random" ><field name="NAME">HORIZONTAL_REFLECTION</field><statement name="NAME"><block type="if" ><mutation elseIds=""></mutation><value name="CONDITION"><block type="boolean_operation" ><field name="OPERATION">AND</field><value name="A"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">NW</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><value name="B"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">NE</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value></block></value><statement name="THEN"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">NE</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">11</field></shadow></value><next><block type="set_r_cell" ><field name="DATA">RA</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">NE</field></shadow></value><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow></value><next><block type="set_r_cell" ><field name="DATA">RC</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">NE</field></shadow></value><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="operation" ><mutation implicitType="Number"></mutation><field name="OPERATION">ADD</field><value name="A"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="get_r_cell_short" ><field name="DATA">RC</field></block></value><value name="B"><shadow type="number_literal" ><field name="VALUE">1</field></shadow><block type="random_number" ><value name="MIN"><shadow type="number_literal" ><field name="VALUE">1</field></shadow></value><value name="MAX"><shadow type="number_literal" ><field name="VALUE">6</field></shadow></value></block></value></block></value></block></next></block></next></block></statement></block></statement></block></statement><value name="ELSE_CONDITION1"><shadow type="true_literal" ></shadow><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="2"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value><value name="ITEM1"><shadow type="element_literal" ><field name="VALUE">2</field></shadow></value></block></value></block></value><statement name="THEN1"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value></block></statement><value name="ELSE_CONDITION2"><shadow type="true_literal" ></shadow><block type="boolean_operation"  inline="false"><field name="OPERATION">OR</field><value name="A"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="4"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">3</field></shadow></value><value name="ITEM1"><shadow type="element_literal" ><field name="VALUE">1</field></shadow></value><value name="ITEM2"><shadow type="element_literal" ><field name="VALUE">5</field></shadow></value><value name="ITEM3"><shadow type="element_literal" ><field name="VALUE">10</field></shadow></value></block></value></block></value><value name="B"><block type="boolean_operation" ><field name="OPERATION">AND</field><value name="A"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="element_literal" ><field name="VALUE">11</field></block></value></block></value><value name="B"><block type="comparison" ><field name="COMPARISON">BIGGER</field><value name="A"><block type="get_r_cell" ><field name="DATA">RC</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value></block></value><value name="B"><block type="number_literal" ><field name="VALUE">1</field></block></value></block></value></block></value></block></value><statement name="THEN2"><block type="set_r_cell_short" ><field name="DATA">RA</field><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="random_number" ><value name="MIN"><shadow type="number_literal" ><field name="VALUE">1</field></shadow></value><value name="MAX"><shadow type="number_literal" ><field name="VALUE">30</field></shadow></value></block></value><next><block type="set_r_cell_short" ><field name="DATA">RC</field><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">2</field></shadow></value></block></next></block></statement></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Lava</field><field name="COLOR">#ed5b00</field><field name="COLOR2">#e08a2d</field><next><block type="if" ><mutation elseIds=""></mutation><value name="CONDITION"><block type="one_in" ><value name="NUMBER"><shadow type="number_literal" ><field name="VALUE">21</field></shadow></value></block></value><statement name="THEN"><block type="set_r_cell_short" ><field name="DATA">RA</field><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">0</field></shadow><block type="random_number" ><value name="MIN"><shadow type="number_literal" ><field name="VALUE">0</field></shadow></value><value name="MAX"><shadow type="number_literal" ><field name="VALUE">100</field></shadow></value></block></value></block></statement><next><block type="in_a_random" ><field name="NAME">ROTATION</field><statement name="NAME"><block type="if" ><mutation elseIds="0"></mutation><value name="CONDITION"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="4"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">9</field></shadow></value><value name="ITEM1"><shadow type="element_literal" ><field name="VALUE">5</field></shadow></value><value name="ITEM2"><shadow type="element_literal" ><field name="VALUE">10</field></shadow></value><value name="ITEM3"><shadow type="element_literal" ><field name="VALUE">11</field></shadow></value></block></value></block></value><statement name="THEN"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">7</field></shadow></value></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">2</field></shadow></value></block></value><statement name="THEN0"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">HERE</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">6</field></shadow></value></block></statement></block></statement><next><block type="if" ><mutation elseIds="0,1"></mutation><value name="CONDITION"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="1"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value></block></value><statement name="THEN"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="one_in" ><value name="NUMBER"><shadow type="number_literal" ><field name="VALUE">10</field></shadow></value></block></value><statement name="THEN0"><block type="in_a_random" ><field name="NAME">HORIZONTAL_REFLECTION</field><statement name="NAME"><block type="if" ><mutation elseIds=""></mutation><value name="CONDITION"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">RIGHT</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><statement name="THEN"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">RIGHT</field></shadow></value></block></statement></block></statement></block></statement><value name="ELSE_CONDITION1"><shadow type="true_literal" ></shadow><block type="boolean_operation" ><field name="OPERATION">AND</field><value name="A"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">UP</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><value name="B"><block type="one_in" ><value name="NUMBER"><shadow type="number_literal" ><field name="VALUE">100</field></shadow></value></block></value></block></value><statement name="THEN1"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">UP</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">7</field></shadow></value><next><block type="set_r_cell" ><field name="DATA">RA</field><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">UP</field></shadow></value><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">20</field></shadow></value></block></next></block></statement></block></next></block></next></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="10" y="10"><field name="ELEMENT_NAME">Dust</field><field name="COLOR">#d15ce6</field><field name="COLOR2">#6dc0ed</field><next><block type="modify_r_cell_flexible" ><mutation expanded="false"></mutation><field name="DATA">RB</field><value name="VALUE"><shadow type="number_literal" ><field name="VALUE">1</field></shadow></value><next><block type="in_a_random" ><field name="NAME">HORIZONTAL_REFLECTION</field><statement name="NAME"><block type="if" ><mutation elseIds="0"></mutation><value name="CONDITION"><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="2"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value><value name="ITEM1"><shadow type="element_literal" ><field name="VALUE">2</field></shadow></value></block></value></block></value><statement name="THEN"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">DOWN</field></shadow></value></block></statement><value name="ELSE_CONDITION0"><shadow type="true_literal" ></shadow><block type="is_block" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">SE</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow></value></block></value><statement name="THEN0"><block type="move" ><value name="DIRECTION"><shadow type="vector_constant" ><field name="VALUE">SE</field></shadow></value></block></statement></block></statement><next><block type="if" ><mutation elseIds=""></mutation><value name="CONDITION"><block type="is_touching" ><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">0</field></shadow><block type="group" ><mutation itemCount="2"></mutation><value name="ITEM0"><shadow type="element_literal" ><field name="VALUE">7</field></shadow></value><value name="ITEM1"><shadow type="element_literal" ><field name="VALUE">12</field></shadow></value></block></value></block></value><statement name="THEN"><block type="in_a_random" ><field name="NAME">ROTATION</field><statement name="NAME"><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">NE</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">7</field></shadow></value><next><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">RIGHT</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">7</field></shadow></value></block></next></block></statement><next><block type="change_into" ><value name="CELL"><shadow type="vector_constant" ><field name="VALUE">HERE</field></shadow></value><value name="ELEMENT"><shadow type="element_literal" ><field name="VALUE">7</field></shadow></value></block></next></block></statement></block></next></block></next></block></next></block></xml>','<xml xmlns="https://developers.google.com/blockly/xml"><block type="sand_behavior_base"  deletable="false" x="73" y="22"><field name="ELEMENT_NAME">???</field><field name="COLOR">#00ff40</field><field name="COLOR2">#0048ff</field></block></xml>']},8824:function(e,a,l){l.d(a,{O4:function(){return u},ZP:function(){return f},n2:function(){return v},oR:function(){return s}});var t=l(4671),n=l(4093),o=l(397),i=["fuschia","purple","blue","sky","teal","green","lime","yellow","sand"],d=function(){var e=Math.floor(Math.random()*i.length);return i[e]};function c(e,a){(null==a||a>e.length)&&(a=e.length);for(var l=0,t=new Array(a);l<a;l++)t[l]=e[l];return t}function m(e,a){return function(e){if(Array.isArray(e))return e}(e)||function(e,a){var l=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=l){var t,n,o=[],i=!0,d=!1;try{for(l=l.call(e);!(i=(t=l.next()).done)&&(o.push(t.value),!a||o.length!==a);i=!0);}catch(e){d=!0,n=e}finally{try{i||null==l.return||l.return()}finally{if(d)throw n}}return o}}(e,a)||function(e,a){if(e){if("string"==typeof e)return c(e,a);var l=Object.prototype.toString.call(e).slice(8,-1);return"Object"===l&&e.constructor&&(l=e.constructor.name),"Map"===l||"Set"===l?Array.from(l):"Arguments"===l||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l)?c(e,a):void 0}}(e,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var r=n.Z,u=15,s=(0,t.Z)((function(e,a){return{post:null,expandedPostId:null,initialSandsData:void 0,initialSelected:3,initialWorldSize:75,initialWorldScale:1/4,initialPaused:!1,loading:!1,curtainColor:d(),pos:[-1,-1],setPos:function(a){return e((function(){return{pos:a}}))},selectedElement:0,setSelected:function(a){return e((function(){return{selectedElement:a}}))},paused:!1,setPaused:function(a){return e((function(){return{paused:a}}))},size:3,setSize:function(a){return e((function(){return{size:a}}))},worldScale:1/4,setWorldScale:function(a){return e((function(){return{worldScale:a}}))},worldWidth:75,worldHeight:75,worldCellCount:5625,setWorldSize:function(a){var l=m(a,2),t=l[0],n=l[1];e({worldWidth:t,worldHeight:n,worldCellCount:t*t})},updateScheme:"RANDOM_CYCLIC",setUpdateScheme:function(a){return e((function(){return{updateScheme:a}}))},taggedMode:!1,setTaggedMode:function(a){return e((function(){return{taggedMode:a}}))},xmls:[],disabled:[],elements:["Air","Wall","Water","Sand"],colors:[],color2s:[],deleteSelectedElement:function(){return e((function(){var e=a(),l=e.disabled,t=e.selectedElement,n=e.elements;l[t]=!0;for(var o=0;o<16;o++){var i=(u+t-o)%u;if(n[i]&&!l[i]){t=i;break}}return{disabled:l,selectedElement:t}}))},newElement:function(){return e((function(){var e=a(),l=e.disabled,t=e.selectedElement,o=e.elements,i=e.xmls,d=e.setXmls;if(!(i.length>=u&&0==l.length)){for(var c=0;c<16;c++)if(!o[c]||l[c]){var m,s;l[c]=!1,i[c]=null!==(s=null!==(m=i[c])&&void 0!==m?m:r[c])&&void 0!==s?s:(0,n.I)(c),t=c;break}return d(i),{disabled:l,selectedElement:t}}}))},setXmls:function(a){return e((function(){var e=(a=a.filter((function(e){return null!==e}))).map((function(e){return(0,o.Sb)(e)})),l=a.map((function(e){return(0,o.Sb)(e,2)})),t=a.map((function(e){return(0,o.ho)(e)}));return{xmls:a,colors:e,color2s:l,elements:t}}))},setXml:function(l,t){return e((function(){var e=a(),n=e.colors,i=e.color2s,d=e.xmls,c=e.elements;d=d.slice(0),n=n.slice(0),c=c.slice(0),d[t]=l,n[t]=(0,o.Sb)(l),i[t]=(0,o.Sb)(l,2),c[t]=(0,o.ho)(l);var r=m(n[t],3),u=r[0],s=r[1],v=r[2],f="hsla(".concat(360*u,",").concat(100*s,"%,").concat(100*v,"%,0.5)");return document.querySelector(".blocklyMainBackground").style.fill=f.replace("0.5","0.3"),{xmls:d,colors:n,color2s:i,elements:c}}))},setElementName:function(l,t){return e((function(){var e=a().elements;return(e=e.slice(0))[l]=t,{elements:e}}))}}})),v={updaters:[],workspace:void 0,wraparoundEnabled:!0,worldWidth:75,worldHeight:75};window.globalState=v;var f=s}}]);